name: Terraform EC2 Provisioning

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows you to manually trigger the workflow from GitHub Actions UI

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      # Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform -chdir=terraform init

      # Run Terraform Plan
      - name: Run Terraform Plan
        run: terraform -chdir=terraform plan

      # Run Terraform Apply (Provision Resources)
      - name: Run Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve

  destroy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only run this job when manually triggered

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      # Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform -chdir=terraform init

      # Run Terraform Destroy
      - name: Run Terraform Destroy
        run: terraform -chdir=terraform destroy -auto-approve



